[project]
name = "ipm-challenge"
version = "0.1.0"
description = ""
authors = [
    { name = "valnog", email = "nogueiravalente@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.13, <4.0"
dependencies = [
    "django (>=5.2.1,<6.0.0)",
    "djangorestframework (>=3.16.0,<4.0.0)",
    "djangorestframework-simplejwt (>=5.5.0,<6.0.0)",
    "drf-spectacular (>=0.28.0,<0.29.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.10"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-sugar = "^1.0.0"
pytest-django = "^4.11.1"
taskipy = "^1.14.1"
ipython = "^9.2.0"
factory-boy = "^3.3.3"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
pythonpath = "."
addopts = '-p no:warnings'

[tool.coverage.report]
fail_under = 80
omit = [
    "*/migrations/*",
    "*/__init__.py",
    "*/tests/*",
    "*/settings.py",
    "*/asgi.py",
    "*/wsgi.py",
    "*/urls.py"
]
show_missing = true

[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = [
    'migrations',
    'manage.py',
    'core/settings.py'
]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "S", "UP", "PL", "PT"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F403", "F401"]
"*/tests/*" = ["F401", "F811", "S101", "S105", "S106", "PT011"]

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
pre_test = 'task lint'
test = 'pytest -s -x --cov=core -vv'
post_test = 'coverage html'
runserver = 'python manage.py runserver'
